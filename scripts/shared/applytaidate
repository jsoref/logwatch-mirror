###############################################################################
# $Id: applytaidate,v 1.3 2008/06/30 23:07:51 kirk Exp $
###############################################################################
# $Log: applytaidate,v $
# Revision 1.3  2008/06/30 23:07:51  kirk
# fixed copyright holders for files where I know who they should be
#
# Revision 1.2  2008/03/24 23:31:27  kirk
# added copyright/license notice to each script
#
# Revision 1.1  2005/09/07 00:37:59  bjorn
# New qmail multilog files written by Bob Hutchinson
#
###############################################################################
# converts 'tai' style datestamps to something more readable and parseable
# this version of applytaidate uses Logwatch.pm and no longer uses tai64nlocal
###############################################################################
#
#########################################################
## Copyright (c) 2008 Bob Hutchinson
## Covered under the included MIT/X-Consortium License:
##    http://www.opensource.org/licenses/mit-license.php
## All modifications and contributions by other persons to
## this script are assumed to have been donated to the
## Logwatch project and thus assume the above copyright
## and licensing terms.  If you want to make contributions
## under your own copyright or a different license this
## must be explicitly stated in the contribution an the
## Logwatch project reserves the right to not accept such
## contributions.  If you have made significant
## contributions to this script and want to claim
## copyright please contact logwatch-devel@lists.sourceforge.net.
#########################################################

use Logwatch ':dates';

my $Debug = $ENV{'LOGWATCH_DEBUG'} || 0;

my $SearchDate = TimeFilter('%a %b %e %H:%M:%S %Y');

if ( $Debug > 5 ) {
	print STDERR "DEBUG: Inside ApplyTaiDate...\n";
	print STDERR "DEBUG: Looking For: (" . $SearchDate . ")\n";
}

while (defined($ThisLine = <STDIN>)) {
	# localtime may only work on 32 bits (year 2038), but we pass 36 bits
	# for systems that support larger localtime (test this)
	#if ($ThisLine =~ s/^\@40{6}([0-9a-f]{9})[0-9a-f]{8}\s// ) {

	# We pass only 32 bits due to localtime limits (not Y2038 compliant)
	if ($ThisLine =~ s/^\@40{7}([0-9a-f]{8})[0-9a-f]{8}\s// ) {
		my $NewTimeStamp = scalar(localtime(hex($1)));
		if ($NewTimeStamp =~ /^$SearchDate$/) {
			print $ThisLine;
			if ( $Debug > 5 ) { print STDERR "DEBUG: NewTimeStamp: " . $NewTimeStamp . " ($ThisLine)\n"; }
		}
	}
}

# vi: shiftwidth=3 syntax=perl tabstop=3 et
# Local Variables:
# mode: perl
# perl-indent-level: 3
# indent-tabs-mode: nil
# End:
